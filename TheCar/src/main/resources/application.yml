# 스프링 부트 프로젝트에서 프로퍼티를 관리하는 방법은 2가지이다.
# 첫 번째는 .properties을 이용하는 것이고, 두 번째는 YAML 파일(.yml)을 이용하는 것이다.

# 웹 애플리케이션을 운용하기 위해서는 다양한 객체가 필요한데,
# 이는 개발자가 직접 작성한 객체와 프레임워크에서 제공하는 객체로 나뉜다.
# 스프링 부트에서는 객체를 자동으로 생성하고 관리하기 위해서 자동설정 클래스를 제공한다.
# Maven Dependencies의 spring-boot-autoconfigure-2.6.7.jar 파일안에는
# 수많은 자동설정 클래스가 등록되어 있다. 이러한 자동설정 클래스는 스프링 애플리케이션이 로딩되는 순간
# 자동으로 처리되어 여러 객체들을 생성한다.
# 이 중에서 웹 애플리케이션과 관련된 자동설정 클래스가 바로 WebMvcAutoConfiguration이다.
# 그중 InternalResourceViewResolver 객체를 생성하는 defaultViewResolver()라는 메소드가 있는데,
# defaultViewResolver() 메소드는 InternalResourceViewResolver 객체를 생성한 직후,
# mvcProperties를 이용하여 접두사(prefix)와 접미사(suffix)에 대한 의존성을 주입한다.

# 프로퍼티 파일 설정
# 서버 설정
# server.servlet.context-path=/으로 인해 서버 요청을 할 때 프로젝트 이름을 생략할 수 있다.
#server.port=8080
#server.servlet.context-path=/
#server.servlet.encoding.charset=UTF-8

# 뷰리졸버 설정
# WebMvcAutoConfiguration이라는 자동설정 클래스가 생성하는 InternalResourceViewResolver 객체의
# 접두사(prefix)와 접미사(suffix) 속성을 변경한다.
#spring.mvc.view.prefix=/WEB-INF/thecar/
#spring.mvc.view.suffix=.jsp

# YAML 파일 설정
# 확장자를 .properties에서 .yml로 변경한다.
# YAML 파일은 기존 프로퍼티 설정과 비교하여 중복 설정이 적고 가독성이 좋다.
# 들여쓰기는 space 2개를 사용한다.
# 서버 설정
server:
  port: 8080
  servlet:
    context-path: /
    encoding:
      charset: UTF-8

# 뷰리졸버 설정
spring:
  mvc:
    view:
      prefix: /WEB-INF/thecar/
      suffix: .jsp
  # 데이터소스 설정
  datasource:
    driver-class-name: org.h2.Driver
    url: jdbc:h2:tcp://localhost/~/test
    username: sa
    password:
